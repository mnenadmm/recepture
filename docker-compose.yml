version : '3.7'
services:
  postgres: 
    container_name: postgres
    hostname: postgres
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: nenad
      POSTGRES_PASSWORD: 781022Sone
      POSTGRES_DB: app_magacin
    ports:
      - "5433:5432"
    volumes: 
      - pgdata:/var/lib/postgresql/data
     # - ./baza/data:/var/lib/postgresql/data ovo je bilo straro
      #- ./baza:/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nenad"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mreza2
  
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.novi
    image: flask-backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    volumes:
       - ./backend:/app #celi folder backend prebacujemo u app u kontenjeru
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development
    command: flask run --host=0.0.0.0 --port=5000
      
    networks:
      - mreza1 
      - mreza2

  front: # sudo docker build -t react-front-image .
    build: 
      context: ./client
      dockerfile: Dockerfile   #Dockerfile.txt  je bildovana verzija
    image: react-front-image
    ports:
      - '3000:3000'    #- '8080:80' ovo koristimo za bildovanu verziju
    restart: unless-stopped
    volumes: #mapirali smo src folder sa racunara u src kontenjara!!
       - ./client/src:/app/src
    networks:
      - mreza1
    depends_on:
      - postgres
      - backend
    #environment: #ova varijabla se mora koristiti samo za windows
    #  - WATCHPACK_POLLING=true

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: mnenadmm@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 781022Sone
    restart: unless-stopped
    networks:
      - mreza2  

networks:
  mreza1:
    name: mreza1
  mreza2:
    name: mreza2
volumes:
  pgdata: